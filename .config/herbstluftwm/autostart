#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#===============================================================
# STARTUP
#===============================================================

xrandr --output DP-2 --primary --rate 144 --mode 1920x1080 --pos 1920x0 --output DP-0 --rate 74.97 --mode 1920x1080 --pos 0x0 &
exec ~/.fehbg &
killall picom
# picom --experimental-backends &
# killall -q polybar
polybar main &
indicator-sound-switcher &
redshift -P -O 4500 &
xset s 3600 3600 &

#===============================================================
# KEYBINDS
#===============================================================

# remove all existing keybindings
hc keyunbind --all

Mod=Mod1    # Use alt as the main modifier
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-c close
hc keybind $Mod-Escape spawn rofi -show power-menu -modi power-menu:~/.local/bin/rofi-power-menu
hc keybind $Mod-Return spawn alacritty
hc keybind $Mod-p spawn rofi -show
# hc keybind $Mod-p spawn rofi -modi drun -show
hc keybind $Mod-b spawn brave
hc keybind $Mod-w spawn playerctl --player=ncspot,spotify play-pause
hc keybind $Mod-e spawn playerctl --player=ncspot,spotify next
hc keybind $Mod-q spawn playerctl --player=ncspot,spotify previous
hc keybind $Mod-Shift-s spawn flameshot gui
hc keybind $Mod-v spawn dunstctl set-paused toggle
hc keybind Mod4-3 spawn sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 -2%"
hc keybind Mod4-4 spawn sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 +2%"
hc keybind $Mod-m spawn pactl set-source-mute 0 toggle

# movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-x floating toggle
hc keybind $Mod-z fullscreen toggle
hc keybind $Mod-Shift-x set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc set default_frame_layout horizontal
 hc substitute ALGO settings.default_frame_layout \
    foreach T tags.by-name. \
    sprintf ATTR '%c.tiling.root.algorithm' T \
    set_attr ATTR ALGO
hc keybind $Mod-d set_layout horizontal
hc keybind $Mod-s set_layout max 
hc keybind $Mod-a set_layout vertical
#hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-f cycle
hc keybind $Mod-i jumpto urgent

#===============================================================
# THEME
#===============================================================

# Start flavours
# colours
bg='#504945'
fg='#b8bb26'
ac='#ebdbb2'
ur='#fb4934'
# End flavours
hc attr theme.tiling.reset 1
#hc attr theme.floating.reset 1
#hc set frame_border_active_color '#222222cc'
#hc set frame_border_normal_color '#101010cc'
#hc set frame_bg_normal_color '#565656aa'
#hc set frame_bg_active_color '#345F0Caa'
hc set frame_border_width 0
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 0

hc attr theme.title_height 18
hc attr theme.title_depth 7
hc attr theme.title_when multiple_tabs
# hc attr theme.normal.title_when never
hc attr theme.title_font 'Iosevka Custom:pixelsize=14'  # example using Xft
hc attr theme.title_align center
hc attr theme.title_color $ac
hc attr theme.active.title_color $ac
hc attr theme.tab_outer_width 10
hc attr theme.tab_outer_color $bg
# hc attr theme.title_color $bg
hc attr theme.padding_top 0  # space below the title's baseline (i.e. text depth)
hc attr theme.active.color $fg
hc attr theme.normal.color $bg
hc attr theme.urgent.color $ur
#hc attr theme.inner_width 0
#hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 3
#hc attr theme.floating.outer_width 0
#hc attr theme.floating.outer_color black
#hc attr theme.active.inner_color '#789161'
#hc attr theme.urgent.inner_color $ac
#hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
#for state in active urgent normal ; do
#    hc substitute C theme.${state}.inner_color \
#        attr theme.${state}.outer_color C
#done
#hc attr theme.active.outer_width 1
#hc attr theme.background_color '#141414'

hc set window_gap 10
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

#===============================================================
# RULES
#===============================================================

hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

#===============================================================
# MONITORS
#===============================================================

hc set_monitors 1920x1080+0+0 1920x1080+1920+0

panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
